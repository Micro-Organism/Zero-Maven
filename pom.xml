<project xmlns = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--  region 根元素和必要配置 -->

    <!-- 模型版本 -->
    <modelVersion>4.0.0</modelVersion>
    <!-- 公司或者组织的唯一标志，也是打包成jar包路径的依据 -->
    <!-- 例如com.zero.maven，maven打包jar包的路径：/com/zero/maven -->
    <groupId>com.zero.maven</groupId>
    <!-- 项目的唯一ID，一个groupId下面可能多个项目，就是靠artifactId来区分的 -->
    <artifactId>zero-maven</artifactId>
    <!-- 项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 -->
    <version>1.0.0</version>
    <!-- 项目名称 -->
    <name>zero-maven</name>
    <!-- 项目描述 -->
    <description>zero-maven</description>
    <modules>
        <module>maven-common</module>
        <module>maven-boot</module>
        <module>maven-cloud</module>
    </modules>
    <!-- 项目产生的构件类型，包括jar、war、ear、pom等 -->
    <packaging>pom</packaging>

    <!--  endregion  -->

    <!--  region 属性信息 properties -->
    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>

        <junit.version>5.10.1</junit.version>
    </properties>
    <!--  endregion  -->

    <!--  region 配置信息 profiles -->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!-- 默认激活 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <build>
                <!--排除resources文件夹-->
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <!--注意这玩意从编译结果目录开始算目录结构-->
                            <exclude>application*.properties</exclude>
                            <exclude>application*.yaml</exclude>
                            <exclude>application*.yml</exclude>
                            <exclude>bootstrap.yml</exclude>
                            <exclude>bootstrap.yaml</exclude>
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
    <!--  endregion  -->

    <!--  region 显式依赖 dependencies -->

    <dependencies>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!--  endregion  -->

    <!--  region 隐式依赖 dependencyManagement -->

    <dependencyManagement>
        <dependencies>

        </dependencies>
    </dependencyManagement>

    <!--  endregion  -->

    <!--  region 指定maven地址下载jar包到本地 repositories -->

    <repositories>
        <repository>
            <id>maven-aliyun</id>
            <name>maven-aliyun</name>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>http://localhost:8081/repository/maven-aliyun/</url>
        </repository>
        <repository>
            <id>maven-public</id>
            <name>maven-public</name>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>http://localhost:8081/repository/maven-public/</url>
        </repository>
        <repository>
            <id>maven-admin</id>
            <name>maven-admin</name>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>http://localhost:8081/repository/maven-adtec/</url>
        </repository>
    </repositories>

    <!--  endregion  -->

    <!--  region 分发构件至远程仓库 distributionManagement -->

    <distributionManagement>
        <repository>
            <id>maven-releases</id>
            <name>maven-releases</name>
            <url>http://localhost:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven-snapshots</id>
            <name>maven-snapshots</name>
            <url>http://localhost:8081/repository/maven-snapshots/</url>
            <uniqueVersion>true</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <!--  endregion  -->

    <!--  region 编译配置 build -->

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.yml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.yml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--  endregion  -->

</project>